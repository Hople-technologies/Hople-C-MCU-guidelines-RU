{"doc_urls":["hople_c_mcu_guidlines.html#Методические-рекомендации-hople-по-программированию-на-С-для-микроконтроллеров","C_style_guidlines.html#Правила-оформления-кода-на-С","lib_types.html#Типы-библиотек","lib_types.html#Принцип-разделения-ПО-по-типам","lib_types.html#Наш-подход-к-работе-с-каждым-типом-библиотек","lib_types.html#Преимущества-использования-itf_in-библиотек","lib_types.html#Преимущества-для-производителей-микроконтроллеров","lib_types.html#Для-производителей-микросхем","lib_types.html#Для-разработчиков-программного-обеспечения","lib_types/hardware_interfacing.html#interfacing-independent","lib_types/interfacing_independent.html#interfacing-independent"],"index":{"documentStore":{"docInfo":{"0":{"body":8,"breadcrumbs":1,"title":1},"1":{"body":0,"breadcrumbs":0,"title":0},"10":{"body":0,"breadcrumbs":2,"title":2},"2":{"body":9,"breadcrumbs":0,"title":0},"3":{"body":13,"breadcrumbs":0,"title":0},"4":{"body":26,"breadcrumbs":0,"title":0},"5":{"body":1,"breadcrumbs":1,"title":1},"6":{"body":4,"breadcrumbs":0,"title":0},"7":{"body":2,"breadcrumbs":0,"title":0},"8":{"body":17,"breadcrumbs":0,"title":0},"9":{"body":0,"breadcrumbs":2,"title":2}},"docs":{"0":{"body":"В Hople мы высокого ценим эффективность и качество во всех нашей аспектах деятельности. Программное обеспечение для микроконтроллеров не является исключением. От качества встраиваемого ПО может зависеть жизнь и безопасность людей, некачественные алгоритмы могут приводить к выходу из строя управляемых систем и уменьшению общего срока службы, а плохая оптимизация и приводит к потреблению большого количества ресурсов, например электроэнергии. Мы считаем, что унификация способов разработки и тестирования - важный этап повышения качества и безопасности программного обеспечения для встраиваемых систем, а также эффективный способ сделать разработку дешевле и эффективнее. Имея в виду данную идею мы оформили и продолжаем обновлять этот набор правил и методов разработки и тестирования программного обеспечения встраиваемых систем. В данной документации описаны : наши методические рекомендации по стилю кода, написанного на языке С; наш взгляд на разделение кода на независимые компоненты (библиотеки) и наш подход к унификации данных компонентов; наш подход к тестированию и отладке встраиваемых систем. /Что-то, что я допишу потом, когда это что-то появится/ Данная информация распространяется в соответствии с лицензией /написать лицензию/ . Эта документация доступна на нескольких языках : English ; Русский . Мы активно приветствуем исправления и улучшения этой документации . Подробнее о внесении вклада можно почитать в файле CONTRIBUTING.md в соответствующем репозитории на gitHub: English source gitHub Русский исходник gitHub","breadcrumbs":"Методические рекомендации Hople по программированию на С для микроконтроллеров","id":"0","title":"Методические рекомендации Hople по программированию на С для микроконтроллеров"},"1":{"body":"","breadcrumbs":"Правила оформления кода на С","id":"1","title":"Правила оформления кода на С"},"10":{"body":"","breadcrumbs":"Типы библиотек » interfacing independent","id":"10","title":"interfacing independent"},"2":{"body":"При разработке программного обеспечения для микроконтроллеров мы выделяем 3 типа библиотек: взаимодействия с аппаратным обеспечением (hardware interfacing); зависящие от аппаратного обеспечения, но не зависящие от взаимодействия (hardware dependent, interfacing independent); не зависящие от аппаратного обеспечения (hardware independent). Перед тем, как объяснить, зачем необходим каждый тип библиотек, нужно понять ситуации, возникающие при разработке программного обеспечения для микроконтроллеров: внутри современных микроконтроллеров находится большое количество периферии, соответственно каждый вывод может быть отнесен к большому количеству различных периферийных устройств; настройка идентичных периферий может сильно отличаться как между различными производителями, так и между различными семействами микроконтроллеров одного производителя; после добавления микроконтроллера на печатную плату, задачи всех ножек уже известны и не будут изменяться в процессе работы устройства.","breadcrumbs":"Типы библиотек","id":"2","title":"Типы библиотек"},"3":{"body":"Программирование микроконтроллеров начинается с настройки и реализации взаимодействия с периферией (например считывание показаний АЦП, передачи данных по интерфейсам связи или генерации ШИМ-сигнала). Код реализующий непосредственную настройку, а также взаимодействие с периферией можно назвать \" программным обеспечением взаимодействия с аппаратным обеспечением \", важной особенностью этого совершенно условного типа ПО является то, что оно будет отличаться как для различных семейств микроконтроллеров установленных в идентичные устройства, так и для одинаковых микроконтроллеров, установленных в различные устройства (так как требуемый от МК функционал может отличаться). Далее реализуется логика обработки данных, полученных от периферии (например различные преобразования: показаний АЦП в определенный физический параметр или данных полученных от IMU в углы или скорости изменения углов). Данный тип программного обеспечения мы будем называть \" зависящим от аппаратного обеспечения, но не зависящими от взаимодействия с аппаратным обеспечением. Важной особенность данного типа ПО является независимость от конкретных методов взаимодействия с периферией микроконтроллера, но прим этом зависимость от конкретного типа периферии. Для объяснения этого утверждения объясним пример про обработку показаний АЦП: для вычисления значения физического параметр не важно, каким именно образом было получено значение от конкретного АЦП, с другой стороны значение имеет конкретный вид схемы измерения, разрядность АЦП и период опроса. Все важные параметры в этом примере для конкретного устройства известны заранее и не изменяются в ходе работы устройства. Большое количество программного обеспечения вообще не использует какую-либо периферию цифровых устройств на которых запускается. Близкий к аппаратному обеспечению пример: алгоритмы вычисления положения объекта в пространстве по углам, полученным от различных датчиков (гироскоп, акселерометр, компас) - данные от датчиков получаются уже в физических величинах, и соответственно никакого взаимодействия с железом не происходит, такой алгоритм может использоваться как в системах управления беспилотными летательными аппаратами, так и для моделирования таких систем без каких либо изменений. Другими, идейно далекими от использования периферии являются алгоритмы кодирования и декодирования, работы с двухмерной графикой для последующего отображения на дисплеях и многое другое. Программное обеспечение данного типа мы будем называть \" не зависящим от аппаратного обеспечения \". Описанные выше типы являются условными и не имеют строгих границ, по ним можно распределить практически любые элементы ПО. Для каждого описанного типа программного обеспечения возможна реализация независимых библиотек. Мы будем называть эти библиотеки в соответствии с типами ПО, которые данные библиотеки реализуют реализуют: библиотеки независящими от аппаратного обеспечения (hardware independent libraries) , библиотеки зависящие от аппаратного обеспечения, но не зависящие от взаимодействия (hardware dependent, interfacing independent) - далее itf_in-библиотеки , библиотеки взаимодействия с аппаратным обеспечением (hardware interfacing), далее it-библиотеки . Для упрощения классификации библиотек введем три правила: если в библиотеке есть хотя бы одна функция, реализующая настройку или взаимодействие с каким-либо видом микроконтроллеров, данная библиотека называться itf вне зависимости от объема и остального содержания; если в библиотеке есть хотя бы одна функция, реализующая обработку данных от конкретной периферии, но нет функций настройки и взаимодействия с периферией, данная библиотека относится к типу itf_in; если в библиотеке нет никаких зависимостей от периферии (будь то настройка, взаимодействие или обработка), библиотека будет независящей от аппаратного обеспечения.","breadcrumbs":"Принцип разделения ПО по типам","id":"3","title":"Принцип разделения ПО по типам"},"4":{"body":"Мы не беремся каким-либо образом классифицировать и стандартизировать независящие от аппаратного обеспечения библиотеки , так как они очень распространены и могут быть применены далеко за пределами разработки программного обеспечения для встраиваемых систем. Нашей основной целью является продвижение идеи itf_in-библиотек и стандартизация их оформления для обеспечения более унифицированного интерфейса взаимодействия между различными устройствами и микроконтроллерами любых производителей. Для понимания идеи itf_in-библиотек рассмотри простой пример стандартного подхода к разработке и использованию библиотеки такого рода. Каждая interfacing independent библиотека должна формулировать требования к устройству на котором будет запущена . Данные требования должны исполняться в коде инициализации устройства, например, посредством написания itf-библиотеки, или использования предоставляемых многими современными производителями микроконтроллеров библиотек надстройки надстройки над аппаратным обеспечением (HAL). Требования в общем случае можно разделить на два вида: требования по настройке периферии, и требования по реализации интерфейса взаимодействия с периферией. Например, разрабатывается itf_in библиотека по обмену данными с 3-осевым гироскопом. Обмен данными с гироскопом происходит посредством интерфейса SPI, а также 1 цифровой ножки для включения устройства из режима сна. Во-первых, itf_in-библиотека может быть запущена только на микроконтроллере, имеющим необходимую периферию , для нашего примера микроконтроллер должен либо иметь свободный аппаратный SPI-интерфейс, либо реализовывать программный. Во-вторых, itf_in-библиотека должна выдвигать требования к настройкам и интерфейсу взаимодействия с периферией микроконтроллера . Для нашего примера** требования к настройкам периферии** могут представлять требования к настройке интерфейса SPI (скорости обмена данными, вида кадра, и так далее) и требования к настройке ножки микроконтроллера в режим цифрового выхода. Требования к интерфейсу взаимодействия с периферией могут включать: наличие трех функций: с одним входным параметром типа int8_t, возвращающая значение типа int8_t. Функция должна отправлять по интерфейсу SPI входной байт и возвращать полученный байт; без входных и выходных параметров. Устанавливающая на подключенной к гироскопу ножке микроконтроллера \"1\". Необходимость представлять даже такую элементарную операцию, как установка установка ножки в \"1\", в виде отдельной функции, а не макроса, обоснована и подробно описана в главе про itf_in библиотеки; без входных и выходных параметров. Устанавливающая на подключенной к гироскопу ножке микроконтроллера \"0\"; На основании выставленный требований, itf_in-библиотека реализует задуманный функционал . В нашем примере библиотека может использовать указатели на функции изменения состояния цифровой ножки для включения и выключения микросхемы, а также указатель на функцию отправки данных и получения даннах от интерфейса SPI, благодаря чему становится возможным организация любого, сколь угодно сложного обмена данными с целевой микросхемой. Таким образом используя относительно простой предоставленный интерфейс связи itf_in-библиотека может реализовать сложные алгоритмы взаимодействия с периферией и при этом будет являться кроссплатформенной, так как не обращается напрямую к периферии какого-то конкретного микроконтроллера, а работает с предоставленным интерфейсом, то есть может быть запущена на любом микроконтроллере, который может предоставить необходимый интерфейс. В целя уточнения надо заметить, что itf_in библиотеке в примере совершенно не важно с каким именно SPI на микроконтроллера она будет работать и какой ножкой будет управлять, она просто использует указатели на функции и соответственно будет работать с тем интерфейсом и ножкой, взаимодействие с которыми реализуется в функции.","breadcrumbs":"Наш подход к работе с каждым типом библиотек","id":"4","title":"Наш подход к работе с каждым типом библиотек"},"5":{"body":"Главная идея itf_in-библиотек повсеместная унификация программного обеспечения для встраиваемых систем, которая может быть полезна всем основным сторонам разработки: производителям микроконтроллеров, производителем микросхем, разработчикам программного обеспечения.","breadcrumbs":"Преимущества использования itf_in-библиотек","id":"5","title":"Преимущества использования itf_in-библиотек"},"6":{"body":"Большинство крупных производителей микроконтроллеров уже сейчас в том или ином виде имеют библиотеки надстройки над аппаратным обеспечением, которые могут быть применены в качестве itf-библиотек и соответственно делают процесс организации интерфейса взаимодействия с itf_in библиотеками тривиальным. Соответственно для многих производителей микроконтроллеров выгода будет в том, что они уже предоставляют готовое решение упрощающее жизнь разработчикам программного обеспечения. Кроме того, стандартизация itf_in-библиотек позволит сформировать базу методов, которые должны присутствовать для любых семейств микроконтроллеров, что позволит при необходимости расширить уже имеющиеся HAL-библиотеки и облегчит проектирование библиотек для производителей, которые таковых еще не имеют.","breadcrumbs":"Преимущества для производителей микроконтроллеров","id":"6","title":"Преимущества для производителей микроконтроллеров"},"7":{"body":"При производстве микросхем подразумевается фиксированный набор способов, посредством которых можно управлять конкретной микросхемой, что дает возможность разрабатывать полноценные itf_in библиотеки практически для любого типа микросхем, от памяти, до драйверов двигателей переменного тока. При этом наличие стандартизированных itf_in-библиотек у производителя может значительно упростить процесс разработки итогового программного обеспечения, и соответственно сделает конкретную микросхему более привлекательной для потребителей.","breadcrumbs":"Для производителей микросхем","id":"7","title":"Для производителей микросхем"},"8":{"body":"itf-библиотеки значительно упрощают разработчиком, так как избавляют их от оков конкретной архитектуры микроконтроллеров, так как раньше для каждой архитектуры приходилось разрабатывать собственные библиотеки. Кроме этого при желании разработчики могут игнорировать готовые HAL-библиотеки и разрабатывать свои, более подходящие по внутренним правилам интерфейсы, что также не отнимает гибкость разработки. Общая схема взаимодействия модулей показаны на рисунке ниже: Правила формирования itf_in библиотек описаны в главе interfacing independent . Кроме этого мы сказали про itf-библиотеки, но не привели пример того, что под этим подразумеваем. itf-библиотеки - наш внутренний способ разработки HAL-библиотек для каждой конкретной печатной платы. Такой подход дает максимальный контроль и позволяет в удобном виде настраивать устройство и использовать любые подходящие itf-библиотеки.** В отличии от itf_in-библиотек мы не продвигаем повсеместное использование itf-библиотек**, но наш формат оформления описан в главе hardware interfacing . (В это описание надо со временем привести побольше примеров с кодом и пару картинок, разъясняющих ситуацию) Сейчас еще задумался о том, что impi-библиотеки это именно библиотеки взаимодействия с какого-то рода конкретными устройствами (микросхемами или каскадами) и возможно есть смысл ввести еще четвертый тип библиотек, схожих по наполнению с impi, но необходимых для реализации логики работы какого-то конкретного устройства - что-то, что я когда-то называл device-библиотеками, но это надо смотреть на практике Важно еще написать что вообще подразумевается под библиотекой (мол это не один .h-файл, а их набор, главный из которых имеет в названии нужный постфикс)","breadcrumbs":"Для разработчиков программного обеспечения","id":"8","title":"Для разработчиков программного обеспечения"},"9":{"body":"","breadcrumbs":"Типы библиотек » interfacing independent","id":"9","title":"interfacing independent"}},"length":11,"save":true},"fields":["title","body","breadcrumbs"],"index":{"body":{"root":{"0":{"df":1,"docs":{"4":{"tf":1.0}}},"1":{"df":1,"docs":{"4":{"tf":1.7320508075688772}}},"3":{"df":2,"docs":{"2":{"tf":1.0},"4":{"tf":1.0}}},"c":{"df":0,"docs":{},"o":{"df":0,"docs":{},"n":{"df":0,"docs":{},"t":{"df":0,"docs":{},"r":{"df":0,"docs":{},"i":{"b":{"df":0,"docs":{},"u":{"df":0,"docs":{},"t":{"df":0,"docs":{},"i":{"df":0,"docs":{},"n":{"df":0,"docs":{},"g":{".":{"df":0,"docs":{},"m":{"d":{"df":1,"docs":{"0":{"tf":1.0}}},"df":0,"docs":{}}},"df":0,"docs":{}}}}}}},"df":0,"docs":{}}}}}}},"d":{"df":0,"docs":{},"e":{"df":0,"docs":{},"p":{"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"d":{"df":2,"docs":{"2":{"tf":1.0},"3":{"tf":1.0}}},"df":0,"docs":{}}}},"v":{"df":0,"docs":{},"i":{"c":{"df":1,"docs":{"8":{"tf":1.0}}},"df":0,"docs":{}}}}},"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"df":0,"docs":{},"g":{"df":0,"docs":{},"l":{"df":0,"docs":{},"i":{"df":0,"docs":{},"s":{"df":0,"docs":{},"h":{"df":1,"docs":{"0":{"tf":1.4142135623730951}}}}}}}}},"g":{"df":0,"docs":{},"i":{"df":0,"docs":{},"t":{"df":0,"docs":{},"h":{"df":0,"docs":{},"u":{"b":{"df":1,"docs":{"0":{"tf":1.7320508075688772}}},"df":0,"docs":{}}}}}},"h":{"a":{"df":0,"docs":{},"l":{"df":3,"docs":{"4":{"tf":1.0},"6":{"tf":1.0},"8":{"tf":1.4142135623730951}}},"r":{"d":{"df":0,"docs":{},"w":{"a":{"df":0,"docs":{},"r":{"df":3,"docs":{"2":{"tf":1.7320508075688772},"3":{"tf":1.7320508075688772},"8":{"tf":1.0}}}},"df":0,"docs":{}}},"df":0,"docs":{}}},"df":1,"docs":{"8":{"tf":1.0}},"o":{"df":0,"docs":{},"p":{"df":0,"docs":{},"l":{"df":1,"docs":{"0":{"tf":1.4142135623730951}}}}}},"i":{"df":0,"docs":{},"m":{"df":0,"docs":{},"p":{"df":0,"docs":{},"i":{"df":1,"docs":{"8":{"tf":1.4142135623730951}}}},"u":{"df":1,"docs":{"3":{"tf":1.0}}}},"n":{"d":{"df":0,"docs":{},"e":{"df":0,"docs":{},"p":{"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"d":{"df":6,"docs":{"10":{"tf":1.0},"2":{"tf":1.4142135623730951},"3":{"tf":1.4142135623730951},"4":{"tf":1.0},"8":{"tf":1.0},"9":{"tf":1.0}}},"df":0,"docs":{}}}}}},"df":0,"docs":{},"t":{"8":{"_":{"df":0,"docs":{},"t":{"df":1,"docs":{"4":{"tf":1.4142135623730951}}}},"df":0,"docs":{}},"df":0,"docs":{},"e":{"df":0,"docs":{},"r":{"df":0,"docs":{},"f":{"a":{"c":{"df":6,"docs":{"10":{"tf":1.0},"2":{"tf":1.4142135623730951},"3":{"tf":1.4142135623730951},"4":{"tf":1.0},"8":{"tf":1.4142135623730951},"9":{"tf":1.0}}},"df":0,"docs":{}},"df":0,"docs":{}}}}}},"t":{"df":0,"docs":{},"f":{"_":{"df":0,"docs":{},"i":{"df":0,"docs":{},"n":{"df":6,"docs":{"3":{"tf":1.4142135623730951},"4":{"tf":3.0},"5":{"tf":1.4142135623730951},"6":{"tf":1.4142135623730951},"7":{"tf":1.4142135623730951},"8":{"tf":1.4142135623730951}}}}},"df":4,"docs":{"3":{"tf":1.0},"4":{"tf":1.0},"6":{"tf":1.0},"8":{"tf":2.23606797749979}}}}},"l":{"df":0,"docs":{},"i":{"b":{"df":0,"docs":{},"r":{"a":{"df":0,"docs":{},"r":{"df":0,"docs":{},"i":{"df":1,"docs":{"3":{"tf":1.0}}}}},"df":0,"docs":{}}},"df":0,"docs":{}}},"s":{"df":0,"docs":{},"o":{"df":0,"docs":{},"u":{"df":0,"docs":{},"r":{"c":{"df":1,"docs":{"0":{"tf":1.0}}},"df":0,"docs":{}}}},"p":{"df":0,"docs":{},"i":{"df":1,"docs":{"4":{"tf":2.449489742783178}}}}}}},"breadcrumbs":{"root":{"0":{"df":1,"docs":{"4":{"tf":1.0}}},"1":{"df":1,"docs":{"4":{"tf":1.7320508075688772}}},"3":{"df":2,"docs":{"2":{"tf":1.0},"4":{"tf":1.0}}},"c":{"df":0,"docs":{},"o":{"df":0,"docs":{},"n":{"df":0,"docs":{},"t":{"df":0,"docs":{},"r":{"df":0,"docs":{},"i":{"b":{"df":0,"docs":{},"u":{"df":0,"docs":{},"t":{"df":0,"docs":{},"i":{"df":0,"docs":{},"n":{"df":0,"docs":{},"g":{".":{"df":0,"docs":{},"m":{"d":{"df":1,"docs":{"0":{"tf":1.0}}},"df":0,"docs":{}}},"df":0,"docs":{}}}}}}},"df":0,"docs":{}}}}}}},"d":{"df":0,"docs":{},"e":{"df":0,"docs":{},"p":{"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"d":{"df":2,"docs":{"2":{"tf":1.0},"3":{"tf":1.0}}},"df":0,"docs":{}}}},"v":{"df":0,"docs":{},"i":{"c":{"df":1,"docs":{"8":{"tf":1.0}}},"df":0,"docs":{}}}}},"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"df":0,"docs":{},"g":{"df":0,"docs":{},"l":{"df":0,"docs":{},"i":{"df":0,"docs":{},"s":{"df":0,"docs":{},"h":{"df":1,"docs":{"0":{"tf":1.4142135623730951}}}}}}}}},"g":{"df":0,"docs":{},"i":{"df":0,"docs":{},"t":{"df":0,"docs":{},"h":{"df":0,"docs":{},"u":{"b":{"df":1,"docs":{"0":{"tf":1.7320508075688772}}},"df":0,"docs":{}}}}}},"h":{"a":{"df":0,"docs":{},"l":{"df":3,"docs":{"4":{"tf":1.0},"6":{"tf":1.0},"8":{"tf":1.4142135623730951}}},"r":{"d":{"df":0,"docs":{},"w":{"a":{"df":0,"docs":{},"r":{"df":3,"docs":{"2":{"tf":1.7320508075688772},"3":{"tf":1.7320508075688772},"8":{"tf":1.0}}}},"df":0,"docs":{}}},"df":0,"docs":{}}},"df":1,"docs":{"8":{"tf":1.0}},"o":{"df":0,"docs":{},"p":{"df":0,"docs":{},"l":{"df":1,"docs":{"0":{"tf":1.7320508075688772}}}}}},"i":{"df":0,"docs":{},"m":{"df":0,"docs":{},"p":{"df":0,"docs":{},"i":{"df":1,"docs":{"8":{"tf":1.4142135623730951}}}},"u":{"df":1,"docs":{"3":{"tf":1.0}}}},"n":{"d":{"df":0,"docs":{},"e":{"df":0,"docs":{},"p":{"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"d":{"df":6,"docs":{"10":{"tf":1.4142135623730951},"2":{"tf":1.4142135623730951},"3":{"tf":1.4142135623730951},"4":{"tf":1.0},"8":{"tf":1.0},"9":{"tf":1.4142135623730951}}},"df":0,"docs":{}}}}}},"df":0,"docs":{},"t":{"8":{"_":{"df":0,"docs":{},"t":{"df":1,"docs":{"4":{"tf":1.4142135623730951}}}},"df":0,"docs":{}},"df":0,"docs":{},"e":{"df":0,"docs":{},"r":{"df":0,"docs":{},"f":{"a":{"c":{"df":6,"docs":{"10":{"tf":1.4142135623730951},"2":{"tf":1.4142135623730951},"3":{"tf":1.4142135623730951},"4":{"tf":1.0},"8":{"tf":1.4142135623730951},"9":{"tf":1.4142135623730951}}},"df":0,"docs":{}},"df":0,"docs":{}}}}}},"t":{"df":0,"docs":{},"f":{"_":{"df":0,"docs":{},"i":{"df":0,"docs":{},"n":{"df":6,"docs":{"3":{"tf":1.4142135623730951},"4":{"tf":3.0},"5":{"tf":1.7320508075688772},"6":{"tf":1.4142135623730951},"7":{"tf":1.4142135623730951},"8":{"tf":1.4142135623730951}}}}},"df":4,"docs":{"3":{"tf":1.0},"4":{"tf":1.0},"6":{"tf":1.0},"8":{"tf":2.23606797749979}}}}},"l":{"df":0,"docs":{},"i":{"b":{"df":0,"docs":{},"r":{"a":{"df":0,"docs":{},"r":{"df":0,"docs":{},"i":{"df":1,"docs":{"3":{"tf":1.0}}}}},"df":0,"docs":{}}},"df":0,"docs":{}}},"s":{"df":0,"docs":{},"o":{"df":0,"docs":{},"u":{"df":0,"docs":{},"r":{"c":{"df":1,"docs":{"0":{"tf":1.0}}},"df":0,"docs":{}}}},"p":{"df":0,"docs":{},"i":{"df":1,"docs":{"4":{"tf":2.449489742783178}}}}}}},"title":{"root":{"df":0,"docs":{},"h":{"df":0,"docs":{},"o":{"df":0,"docs":{},"p":{"df":0,"docs":{},"l":{"df":1,"docs":{"0":{"tf":1.0}}}}}},"i":{"df":0,"docs":{},"n":{"d":{"df":0,"docs":{},"e":{"df":0,"docs":{},"p":{"df":0,"docs":{},"e":{"df":0,"docs":{},"n":{"d":{"df":2,"docs":{"10":{"tf":1.0},"9":{"tf":1.0}}},"df":0,"docs":{}}}}}},"df":0,"docs":{},"t":{"df":0,"docs":{},"e":{"df":0,"docs":{},"r":{"df":0,"docs":{},"f":{"a":{"c":{"df":2,"docs":{"10":{"tf":1.0},"9":{"tf":1.0}}},"df":0,"docs":{}},"df":0,"docs":{}}}}}},"t":{"df":0,"docs":{},"f":{"_":{"df":0,"docs":{},"i":{"df":0,"docs":{},"n":{"df":1,"docs":{"5":{"tf":1.0}}}}},"df":0,"docs":{}}}}}}},"lang":"English","pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5"},"results_options":{"limit_results":30,"teaser_word_count":30},"search_options":{"bool":"OR","expand":true,"fields":{"body":{"boost":1},"breadcrumbs":{"boost":1},"title":{"boost":2}}}}